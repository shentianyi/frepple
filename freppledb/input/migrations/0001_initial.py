# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2018-10-16 16:06
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import freppledb.common.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Buffer',
            fields=[
                ('source', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='source')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='last modified')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='updated_at')),
                ('name', models.CharField(help_text='Unique identifier', max_length=300, primary_key=True, serialize=False, verbose_name='name')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='description')),
                ('category', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='category')),
                ('subcategory', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='subcategory')),
                ('type', models.CharField(blank=True, choices=[('default', 'default'), ('infinite', 'infinite')], default='default', max_length=20, null=True, verbose_name='type')),
                ('onhand', models.DecimalField(blank=True, decimal_places=8, default='0.00', help_text='current inventory', max_digits=20, null=True, verbose_name='onhand')),
                ('minimum', models.DecimalField(blank=True, decimal_places=8, default='0.00', help_text='safety stock', max_digits=20, null=True, verbose_name='minimum')),
                ('min_interval', models.DurationField(blank=True, help_text='Batching window for grouping replenishments in batches', null=True, verbose_name='min_interval')),
            ],
            options={
                'verbose_name': 'buffer',
                'verbose_name_plural': 'buffers',
                'db_table': 'buffer',
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('source', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='source')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='last modified')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='updated_at')),
                ('name', models.CharField(max_length=300, primary_key=True, serialize=False, verbose_name='name')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='description')),
                ('category', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='category')),
                ('subcategory', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='subcategory')),
                ('defaultvalue', models.DecimalField(blank=True, decimal_places=8, default='0.00', help_text='Value to be used when no entry is effective', max_digits=20, null=True, verbose_name='default value')),
            ],
            options={
                'verbose_name': 'calendar',
                'verbose_name_plural': 'calendars',
                'db_table': 'calendar',
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarBucket',
            fields=[
                ('source', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='source')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='last modified')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='updated_at')),
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='identifier')),
                ('startdate', models.DateTimeField(blank=True, null=True, verbose_name='start date')),
                ('enddate', models.DateTimeField(blank=True, default=datetime.datetime(2030, 12, 31, 0, 0), null=True, verbose_name='end date')),
                ('value', models.DecimalField(blank=True, decimal_places=8, default='0.00', max_digits=20, verbose_name='value')),
                ('priority', models.IntegerField(blank=True, default=0, null=True, verbose_name='priority')),
                ('monday', models.BooleanField(default=True, verbose_name='Monday')),
                ('tuesday', models.BooleanField(default=True, verbose_name='Tuesday')),
                ('wednesday', models.BooleanField(default=True, verbose_name='Wednesday')),
                ('thursday', models.BooleanField(default=True, verbose_name='Thursday')),
                ('friday', models.BooleanField(default=True, verbose_name='Friday')),
                ('saturday', models.BooleanField(default=True, verbose_name='Saturday')),
                ('sunday', models.BooleanField(default=True, verbose_name='Sunday')),
                ('starttime', models.TimeField(blank=True, default=datetime.time(0, 0), null=True, verbose_name='start time')),
                ('endtime', models.TimeField(blank=True, default=datetime.time(23, 59, 59), null=True, verbose_name='end time')),
                ('calendar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buckets', to='input.Calendar', verbose_name='calendar')),
            ],
            options={
                'verbose_name': 'calendar bucket',
                'verbose_name_plural': 'calendar buckets',
                'db_table': 'calendarbucket',
                'ordering': ['calendar', 'id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('lft', models.PositiveIntegerField(blank=True, db_index=True, editable=False, null=True)),
                ('rght', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('lvl', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('source', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='source')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='last modified')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='updated_at')),
                ('id', models.AutoField(help_text='Unique identifier', primary_key=True, serialize=False, verbose_name='id')),
                ('nr', models.CharField(db_index=True, max_length=300, unique=True, verbose_name='nr')),
                ('name', models.CharField(db_index=True, max_length=300, verbose_name='name')),
                ('area', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='area')),
                ('address', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='address')),
                ('ship_address', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='ship_address')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='description')),
                ('category', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='category')),
                ('subcategory', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='subcategory')),
                ('available', models.ForeignKey(blank=True, help_text='Calendar defining the working hours and holidays', null=True, on_delete=django.db.models.deletion.CASCADE, to='input.Calendar', verbose_name='available')),
                ('owner', models.ForeignKey(blank=True, help_text='Hierarchical parent', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='xchildren', to='input.Customer', verbose_name='owner')),
            ],
            options={
                'verbose_name': 'customer',
                'verbose_name_plural': 'customers',
                'db_table': 'customer',
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Demand',
            fields=[
                ('lft', models.PositiveIntegerField(blank=True, db_index=True, editable=False, null=True)),
                ('rght', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('lvl', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('name', models.CharField(help_text='Unique identifier', max_length=300, primary_key=True, serialize=False, verbose_name='name')),
                ('source', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='source')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='last modified')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='updated_at')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='description')),
                ('category', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='category')),
                ('subcategory', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='subcategory')),
                ('due', models.DateTimeField(db_index=True, help_text='Due date of the demand', verbose_name='due')),
                ('status', models.CharField(blank=True, choices=[('inquiry', 'inquiry'), ('quote', 'quote'), ('open', 'open'), ('closed', 'closed'), ('canceled', 'canceled')], default='open', help_text='Status of the demand. Only "open" demands are planned', max_length=10, null=True, verbose_name='status')),
                ('quantity', models.DecimalField(decimal_places=8, default=1, max_digits=20, verbose_name='quantity')),
                ('priority', models.IntegerField(default=10, help_text='Priority of the demand (lower numbers indicate more important demands)', verbose_name='priority')),
                ('minshipment', models.DecimalField(blank=True, decimal_places=8, help_text='Minimum shipment quantity when planning this demand', max_digits=20, null=True, verbose_name='minimum shipment')),
                ('maxlateness', models.DurationField(blank=True, help_text='Maximum lateness allowed when planning this demand', null=True, verbose_name='maximum lateness')),
                ('delay', models.DurationField(blank=True, editable=False, null=True, verbose_name='delay')),
                ('plannedquantity', models.DecimalField(blank=True, decimal_places=8, editable=False, help_text='Quantity planned for delivery', max_digits=20, null=True, verbose_name='planned quantity')),
                ('deliverydate', models.DateTimeField(blank=True, editable=False, help_text='Delivery date of the demand', null=True, verbose_name='delivery date')),
                ('plan', freppledb.common.fields.JSONBField(blank=True, default='{}', editable=False, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='input.Customer', verbose_name='customer')),
            ],
            options={
                'verbose_name': 'sales order',
                'verbose_name_plural': 'sales orders',
                'db_table': 'demand',
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('lft', models.PositiveIntegerField(blank=True, db_index=True, editable=False, null=True)),
                ('rght', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('lvl', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('source', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='source')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='last modified')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='updated_at')),
                ('id', models.AutoField(help_text='Unique identifier', primary_key=True, serialize=False, verbose_name='id')),
                ('nr', models.CharField(db_index=True, max_length=300, unique=True, verbose_name='nr')),
                ('name', models.CharField(db_index=True, max_length=300, verbose_name='name')),
                ('barcode', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='barcode')),
                ('type', models.CharField(blank=True, choices=[('FG', 'FG'), ('WIP', 'WIP'), ('RM', 'RM')], max_length=20, null=True, verbose_name='type')),
                ('status', models.CharField(blank=True, max_length=20, null=True, verbose_name='status')),
                ('gross_weight', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True, verbose_name='gross weight')),
                ('net_weight', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True, verbose_name='net weight')),
                ('physical_unit', models.CharField(blank=True, max_length=20, null=True, verbose_name='physical unit')),
                ('project_nr', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='project nr')),
                ('mpq', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True, verbose_name='mpq')),
                ('outer_package_num', models.IntegerField(blank=True, null=True, verbose_name='outer package num')),
                ('pallet_num', models.IntegerField(blank=True, null=True, verbose_name='pallet num')),
                ('outer_package_gross_weight', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True, verbose_name='outer package gross weight')),
                ('pallet_gross_weight', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True, verbose_name='pallet gross weight')),
                ('outer_package_volume', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True, verbose_name='outer package volume')),
                ('pallet_volume', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True, verbose_name='pallet volume')),
                ('plan_list_date', models.DateField(blank=True, db_index=True, null=True, verbose_name='plan list date')),
                ('plan_delist_date', models.DateField(blank=True, db_index=True, null=True, verbose_name='plan delist date')),
                ('category', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='category')),
                ('subcategory', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='subcategory')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='description')),
                ('cost', models.DecimalField(blank=True, decimal_places=8, help_text='Cost of the item', max_digits=20, null=True, verbose_name='cost')),
                ('owner', models.ForeignKey(blank=True, help_text='Hierarchical parent', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='xchildren', to='input.Item', verbose_name='owner')),
            ],
            options={
                'verbose_name': 'item',
                'verbose_name_plural': 'items',
                'db_table': 'item',
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ItemDistribution',
            fields=[
                ('source', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='source')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='last modified')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='updated_at')),
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='identifier')),
                ('leadtime', models.DurationField(blank=True, help_text='lead time', null=True, verbose_name='lead time')),
                ('sizeminimum', models.DecimalField(blank=True, decimal_places=8, default='1.0', help_text='A minimum shipping quantity', max_digits=20, null=True, verbose_name='size minimum')),
                ('sizemultiple', models.DecimalField(blank=True, decimal_places=8, help_text='A multiple shipping quantity', max_digits=20, null=True, verbose_name='size multiple')),
                ('cost', models.DecimalField(blank=True, decimal_places=8, help_text='Shipping cost per unit', max_digits=20, null=True, verbose_name='cost')),
                ('priority', models.IntegerField(blank=True, default=1, help_text='Priority among all alternates', null=True, verbose_name='priority')),
                ('effective_start', models.DateTimeField(blank=True, help_text='Validity start date', null=True, verbose_name='effective start')),
                ('effective_end', models.DateTimeField(blank=True, help_text='Validity end date', null=True, verbose_name='effective end')),
                ('resource_qty', models.DecimalField(blank=True, decimal_places=8, default='1.0', help_text='Resource capacity consumed per distributed unit', max_digits=20, null=True, verbose_name='resource quantity')),
                ('fence', models.DurationField(blank=True, help_text='Frozen fence for creating new shipments', null=True, verbose_name='fence')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='distributions', to='input.Item', verbose_name='item')),
            ],
            options={
                'verbose_name': 'item distribution',
                'verbose_name_plural': 'item distributions',
                'db_table': 'itemdistribution',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ItemSupplier',
            fields=[
                ('source', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='source')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='last modified')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='updated_at')),
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='identifier')),
                ('supplier_item_nr', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='supplier_item_nr')),
                ('status', models.CharField(max_length=20, verbose_name='status')),
                ('cost', models.DecimalField(decimal_places=8, max_digits=20, verbose_name='cost')),
                ('monetary_unit', models.CharField(max_length=20, verbose_name='monetary unit')),
                ('cost_unit', models.DecimalField(decimal_places=8, max_digits=20, verbose_name='cost unit')),
                ('priority', models.IntegerField(default=0, help_text='Priority among all alternates', verbose_name='priority')),
                ('ratio', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True, verbose_name='ratio')),
                ('moq', models.DecimalField(decimal_places=8, max_digits=20, verbose_name='MOQ')),
                ('product_time', models.DurationField(blank=True, null=True, verbose_name='product time')),
                ('load_time', models.DurationField(blank=True, null=True, verbose_name='load time')),
                ('transit_time', models.DurationField(blank=True, null=True, verbose_name='transit time')),
                ('receive_time', models.DurationField(blank=True, null=True, verbose_name='receive time')),
                ('mpq', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True, verbose_name='mpq')),
                ('earliest_order_date', models.DateField(blank=True, null=True, verbose_name='earliest order date')),
                ('outer_package_num', models.IntegerField(blank=True, null=True, verbose_name='outer package num')),
                ('pallet_num', models.IntegerField(blank=True, null=True, verbose_name='pallet num')),
                ('outer_package_gross_weight', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True, verbose_name='outer package gross weight')),
                ('pallet_gross_weight', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True, verbose_name='pallet gross weight')),
                ('outer_package_volume', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True, verbose_name='outer package volume')),
                ('pallet_volume', models.DateField(blank=True, null=True, verbose_name='pallet volume')),
                ('plan_list_date', models.DateField(blank=True, null=True, verbose_name='plan list date')),
                ('plan_delist_date', models.DateField(blank=True, null=True, verbose_name='plan delist date')),
                ('origin', models.CharField(blank=True, max_length=20, null=True, verbose_name='origin')),
                ('effective_start', models.DateTimeField(blank=True, help_text='Validity start date', null=True, verbose_name='effective start')),
                ('effective_end', models.DateTimeField(blank=True, help_text='Validity end date', null=True, verbose_name='effective end')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itemsuppliers', to='input.Item', verbose_name='item')),
            ],
            options={
                'verbose_name': 'item supplier',
                'verbose_name_plural': 'item suppliers',
                'db_table': 'itemsupplier',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('lft', models.PositiveIntegerField(blank=True, db_index=True, editable=False, null=True)),
                ('rght', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('lvl', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('source', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='source')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='last modified')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='updated_at')),
                ('id', models.AutoField(help_text='Unique identifier', primary_key=True, serialize=False, verbose_name='id')),
                ('nr', models.CharField(db_index=True, max_length=300, unique=True, verbose_name='nr')),
                ('name', models.CharField(db_index=True, max_length=300, verbose_name='name')),
                ('area', models.CharField(db_index=True, max_length=300, verbose_name='area')),
                ('category', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='category')),
                ('subcategory', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='subcategory')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='description')),
                ('available', models.ForeignKey(blank=True, help_text='Calendar defining the working hours and holidays', null=True, on_delete=django.db.models.deletion.CASCADE, to='input.Calendar', verbose_name='available')),
                ('owner', models.ForeignKey(blank=True, help_text='Hierarchical parent', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='xchildren', to='input.Location', verbose_name='owner')),
            ],
            options={
                'verbose_name': 'location',
                'verbose_name_plural': 'locations',
                'db_table': 'location',
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('source', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='source')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='last modified')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='updated_at')),
                ('name', models.CharField(max_length=300, primary_key=True, serialize=False, verbose_name='name')),
                ('type', models.CharField(blank=True, choices=[('fixed_time', 'fixed_time'), ('time_per', 'time_per'), ('routing', 'routing'), ('alternate', 'alternate'), ('split', 'split')], default='fixed_time', max_length=20, null=True, verbose_name='type')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='description')),
                ('category', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='category')),
                ('subcategory', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='subcategory')),
                ('priority', models.IntegerField(blank=True, default=1, help_text='Priority among all alternates', null=True, verbose_name='priority')),
                ('effective_start', models.DateTimeField(blank=True, help_text='Validity start date', null=True, verbose_name='effective start')),
                ('effective_end', models.DateTimeField(blank=True, help_text='Validity end date', null=True, verbose_name='effective end')),
                ('fence', models.DurationField(blank=True, help_text='Operationplans within this time window from the current day are expected to be released to production ERP', null=True, verbose_name='release fence')),
                ('posttime', models.DurationField(blank=True, help_text='A delay time to be respected as a soft constraint after ending the operation', null=True, verbose_name='post-op time')),
                ('sizeminimum', models.DecimalField(blank=True, decimal_places=8, default='1.0', help_text='A minimum quantity for operationplans', max_digits=20, null=True, verbose_name='size minimum')),
                ('sizemultiple', models.DecimalField(blank=True, decimal_places=8, help_text='A multiple quantity for operationplans', max_digits=20, null=True, verbose_name='size multiple')),
                ('sizemaximum', models.DecimalField(blank=True, decimal_places=8, help_text='A maximum quantity for operationplans', max_digits=20, null=True, verbose_name='size maximum')),
                ('cost', models.DecimalField(blank=True, decimal_places=8, help_text='Cost per operationplan unit', max_digits=20, null=True, verbose_name='cost')),
                ('duration', models.DurationField(blank=True, help_text='A fixed duration for the operation', null=True, verbose_name='duration')),
                ('duration_per', models.DurationField(blank=True, help_text='A variable duration for the operation', null=True, verbose_name='duration per unit')),
                ('search', models.CharField(blank=True, choices=[('PRIORITY', 'priority'), ('MINCOST', 'minimum cost'), ('MINPENALTY', 'minimum penalty'), ('MINCOSTPENALTY', 'minimum cost plus penalty')], help_text='Method to select preferred alternate', max_length=20, null=True, verbose_name='search mode')),
                ('available', models.ForeignKey(blank=True, help_text='Calendar defining the working hours and holidays', null=True, on_delete=django.db.models.deletion.CASCADE, to='input.Calendar', verbose_name='available')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='operations', to='input.Item', verbose_name='item')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='input.Location', verbose_name='location')),
            ],
            options={
                'verbose_name': 'operation',
                'verbose_name_plural': 'operations',
                'db_table': 'operation',
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OperationMaterial',
            fields=[
                ('source', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='source')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='last modified')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='updated_at')),
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='identifier')),
                ('quantity', models.DecimalField(blank=True, decimal_places=8, default='1.00', help_text='Quantity to consume or produce per operationplan unit', max_digits=20, null=True, verbose_name='quantity')),
                ('quantity_fixed', models.DecimalField(blank=True, decimal_places=8, help_text='Fixed quantity to consume or produce', max_digits=20, null=True, verbose_name='fixed quantity')),
                ('type', models.CharField(blank=True, choices=[('start', 'Start'), ('end', 'End'), ('transfer_batch', 'Batch transfer')], default='start', help_text='Consume/produce material at the start or the end of the operationplan', max_length=20, null=True, verbose_name='type')),
                ('effective_start', models.DateTimeField(blank=True, help_text='Validity start date', null=True, verbose_name='effective start')),
                ('effective_end', models.DateTimeField(blank=True, help_text='Validity end date', null=True, verbose_name='effective end')),
                ('name', models.CharField(blank=True, help_text='Optional name of this operation material', max_length=300, null=True, verbose_name='name')),
                ('priority', models.IntegerField(blank=True, default=1, help_text='Priority of this operation material in a group of alternates', null=True, verbose_name='priority')),
                ('search', models.CharField(blank=True, choices=[('PRIORITY', 'priority'), ('MINCOST', 'minimum cost'), ('MINPENALTY', 'minimum penalty'), ('MINCOSTPENALTY', 'minimum cost plus penalty')], help_text='Method to select preferred alternate', max_length=20, null=True, verbose_name='search mode')),
                ('transferbatch', models.DecimalField(blank=True, decimal_places=8, help_text='Batch size by in which material is produced or consumed', max_digits=20, null=True, verbose_name='transfer batch quantity')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operationmaterials', to='input.Item', verbose_name='item')),
                ('operation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operationmaterials', to='input.Operation', verbose_name='operation')),
            ],
            options={
                'verbose_name': 'operation material',
                'verbose_name_plural': 'operation materials',
                'db_table': 'operationmaterial',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OperationPlan',
            fields=[
                ('source', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='source')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='last modified')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='updated_at')),
                ('id', models.AutoField(help_text='Unique identifier of an operationplan', primary_key=True, serialize=False, verbose_name='identifier')),
                ('status', models.CharField(blank=True, choices=[('proposed', 'proposed'), ('approved', 'approved'), ('confirmed', 'confirmed'), ('closed', 'closed')], help_text='Status of the order', max_length=20, null=True, verbose_name='status')),
                ('type', models.CharField(choices=[('STCK', 'inventory'), ('MO', 'manufacturing order'), ('PO', 'purchase order'), ('DO', 'distribution order'), ('DLVR', 'delivery order')], db_index=True, default='MO', help_text='Order type', max_length=5, verbose_name='type')),
                ('reference', models.CharField(blank=True, help_text='External reference of this order', max_length=300, null=True, verbose_name='reference')),
                ('quantity', models.DecimalField(decimal_places=8, default='1.00', max_digits=20, verbose_name='quantity')),
                ('color', models.DecimalField(blank=True, decimal_places=8, default='0.00', max_digits=20, null=True, verbose_name='color')),
                ('startdate', models.DateTimeField(blank=True, db_index=True, help_text='start date', null=True, verbose_name='start date')),
                ('enddate', models.DateTimeField(blank=True, db_index=True, help_text='end date', null=True, verbose_name='end date')),
                ('criticality', models.DecimalField(blank=True, decimal_places=8, editable=False, max_digits=20, null=True, verbose_name='criticality')),
                ('delay', models.DurationField(blank=True, editable=False, null=True, verbose_name='delay')),
                ('plan', freppledb.common.fields.JSONBField(blank=True, default='{}', editable=False, null=True)),
                ('due', models.DateTimeField(blank=True, editable=False, help_text='Due date of the demand/forecast', null=True, verbose_name='due')),
                ('name', models.CharField(blank=True, db_index=True, max_length=1000, null=True, verbose_name='name')),
                ('demand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='input.Demand', verbose_name='demand')),
                ('destination', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='destinations', to='input.Location', verbose_name='destination')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='input.Item', verbose_name='item')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='input.Location', verbose_name='location')),
                ('operation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='input.Operation', verbose_name='operation')),
                ('origin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='origins', to='input.Location', verbose_name='origin')),
                ('owner', models.ForeignKey(blank=True, help_text='Hierarchical parent', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='xchildren', to='input.OperationPlan', verbose_name='owner')),
            ],
            options={
                'verbose_name': 'operationplan',
                'verbose_name_plural': 'operationplans',
                'db_table': 'operationplan',
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OperationPlanMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='source')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='last modified')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='updated_at')),
                ('quantity', models.DecimalField(decimal_places=8, max_digits=20, verbose_name='quantity')),
                ('flowdate', models.DateTimeField(db_index=True, verbose_name='date')),
                ('onhand', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True, verbose_name='onhand')),
                ('minimum', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True, verbose_name='minimum')),
                ('periodofcover', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True, verbose_name='periodofcover')),
                ('status', models.CharField(blank=True, choices=[('proposed', 'proposed'), ('confirmed', 'confirmed')], help_text='Status of the OperationPlanMaterial', max_length=20, null=True, verbose_name='status')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='operationplanmaterials', to='input.Item', verbose_name='item')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='operationplanmaterials', to='input.Location', verbose_name='location')),
                ('operationplan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materials', to='input.OperationPlan', verbose_name='operationplan')),
            ],
            options={
                'verbose_name': 'operationplan material',
                'verbose_name_plural': 'operationplan materials',
                'db_table': 'operationplanmaterial',
                'ordering': ['item', 'location', 'flowdate'],
            },
        ),
        migrations.CreateModel(
            name='OperationPlanResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='source')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='last modified')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='updated_at')),
                ('quantity', models.DecimalField(decimal_places=8, max_digits=20, verbose_name='quantity')),
                ('startdate', models.DateTimeField(db_index=True, verbose_name='startdate')),
                ('enddate', models.DateTimeField(db_index=True, verbose_name='enddate')),
                ('setup', models.CharField(max_length=300, null=True, verbose_name='setup')),
                ('status', models.CharField(blank=True, choices=[('proposed', 'proposed'), ('confirmed', 'confirmed')], help_text='Status of the OperationPlanResource', max_length=20, null=True, verbose_name='status')),
                ('operationplan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='input.OperationPlan', verbose_name='operationplan')),
            ],
            options={
                'verbose_name': 'operationplan resource',
                'verbose_name_plural': 'operationplan resources',
                'db_table': 'operationplanresource',
                'ordering': ['resource', 'startdate'],
            },
        ),
        migrations.CreateModel(
            name='OperationResource',
            fields=[
                ('source', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='source')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='last modified')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='updated_at')),
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='identifier')),
                ('quantity', models.DecimalField(decimal_places=8, default='1.00', max_digits=20, verbose_name='quantity')),
                ('effective_start', models.DateTimeField(blank=True, help_text='Validity start date', null=True, verbose_name='effective start')),
                ('effective_end', models.DateTimeField(blank=True, help_text='Validity end date', null=True, verbose_name='effective end')),
                ('name', models.CharField(blank=True, help_text='Optional name of this load', max_length=300, null=True, verbose_name='name')),
                ('priority', models.IntegerField(blank=True, default=1, help_text='Priority of this load in a group of alternates', null=True, verbose_name='priority')),
                ('setup', models.CharField(blank=True, help_text='Setup required on the resource for this operation', max_length=300, null=True, verbose_name='setup')),
                ('search', models.CharField(blank=True, choices=[('PRIORITY', 'priority'), ('MINCOST', 'minimum cost'), ('MINPENALTY', 'minimum penalty'), ('MINCOSTPENALTY', 'minimum cost plus penalty')], help_text='Method to select preferred alternate', max_length=20, null=True, verbose_name='search mode')),
                ('operation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operationresources', to='input.Operation', verbose_name='operation')),
            ],
            options={
                'verbose_name': 'operation resource',
                'verbose_name_plural': 'operation resources',
                'db_table': 'operationresource',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('lft', models.PositiveIntegerField(blank=True, db_index=True, editable=False, null=True)),
                ('rght', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('lvl', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('name', models.CharField(help_text='Unique identifier', max_length=300, primary_key=True, serialize=False, verbose_name='name')),
                ('source', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='source')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='last modified')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='updated_at')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='description')),
                ('category', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='category')),
                ('subcategory', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='subcategory')),
                ('type', models.CharField(blank=True, choices=[('default', 'default'), ('buckets', 'buckets'), ('infinite', 'infinite')], default='default', max_length=20, null=True, verbose_name='type')),
                ('maximum', models.DecimalField(blank=True, decimal_places=8, default='1.00', help_text='Size of the resource', max_digits=20, null=True, verbose_name='maximum')),
                ('cost', models.DecimalField(blank=True, decimal_places=8, help_text='Cost for using 1 unit of the resource for 1 hour', max_digits=20, null=True, verbose_name='cost')),
                ('maxearly', models.DurationField(blank=True, help_text='Time window before the ask date where we look for available capacity', null=True, verbose_name='max early')),
                ('setup', models.CharField(blank=True, help_text='Setup of the resource at the start of the plan', max_length=300, null=True, verbose_name='setup')),
                ('efficiency', models.DecimalField(blank=True, decimal_places=8, help_text='Efficiency percentage of the resource', max_digits=20, null=True, verbose_name='efficiency %')),
                ('available', models.ForeignKey(blank=True, help_text='Calendar defining the working hours and holidays', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='input.Calendar', verbose_name='available')),
                ('efficiency_calendar', models.ForeignKey(blank=True, help_text='Calendar defining the efficiency percentage of the resource varying over time', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='input.Calendar', verbose_name='efficiency % calendar')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='input.Location', verbose_name='location')),
                ('maximum_calendar', models.ForeignKey(blank=True, help_text='Calendar defining the resource size varying over time', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='input.Calendar', verbose_name='maximum calendar')),
                ('owner', models.ForeignKey(blank=True, help_text='Hierarchical parent', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='xchildren', to='input.Resource', verbose_name='owner')),
            ],
            options={
                'verbose_name': 'resource',
                'verbose_name_plural': 'resources',
                'db_table': 'resource',
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceSkill',
            fields=[
                ('source', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='source')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='last modified')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='updated_at')),
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='identifier')),
                ('effective_start', models.DateTimeField(blank=True, help_text='Validity start date', null=True, verbose_name='effective start')),
                ('effective_end', models.DateTimeField(blank=True, help_text='Validity end date', null=True, verbose_name='effective end')),
                ('priority', models.IntegerField(blank=True, default=1, help_text='Priority of this skill in a group of alternates', null=True, verbose_name='priority')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='input.Resource', verbose_name='resource')),
            ],
            options={
                'verbose_name': 'resource skill',
                'verbose_name_plural': 'resource skills',
                'db_table': 'resourceskill',
                'ordering': ['resource', 'skill'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SetupMatrix',
            fields=[
                ('source', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='source')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='last modified')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='updated_at')),
                ('name', models.CharField(max_length=300, primary_key=True, serialize=False, verbose_name='name')),
            ],
            options={
                'verbose_name': 'setup matrix',
                'verbose_name_plural': 'setup matrices',
                'db_table': 'setupmatrix',
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SetupRule',
            fields=[
                ('source', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='source')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='last modified')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='updated_at')),
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='identifier')),
                ('priority', models.IntegerField(verbose_name='priority')),
                ('fromsetup', models.CharField(blank=True, help_text='Name of the old setup (wildcard characters are supported)', max_length=300, null=True, verbose_name='from setup')),
                ('tosetup', models.CharField(blank=True, help_text='Name of the new setup (wildcard characters are supported)', max_length=300, null=True, verbose_name='to setup')),
                ('duration', models.DurationField(blank=True, help_text='Duration of the changeover', null=True, verbose_name='duration')),
                ('cost', models.DecimalField(blank=True, decimal_places=8, help_text='Cost of the conversion', max_digits=20, null=True, verbose_name='cost')),
                ('setupmatrix', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='input.SetupMatrix', verbose_name='setup matrix')),
            ],
            options={
                'verbose_name': 'setup matrix rule',
                'verbose_name_plural': 'setup matrix rules',
                'db_table': 'setuprule',
                'ordering': ['priority'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('source', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='source')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='last modified')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='updated_at')),
                ('name', models.CharField(help_text='Unique identifier', max_length=300, primary_key=True, serialize=False, verbose_name='name')),
            ],
            options={
                'verbose_name': 'skill',
                'verbose_name_plural': 'skills',
                'db_table': 'skill',
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubOperation',
            fields=[
                ('source', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='source')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='last modified')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='updated_at')),
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='identifier')),
                ('priority', models.IntegerField(default=1, help_text='Sequence of this operation among the suboperations. Negative values are ignored.', verbose_name='priority')),
                ('effective_start', models.DateTimeField(blank=True, help_text='Validity start date', null=True, verbose_name='effective start')),
                ('effective_end', models.DateTimeField(blank=True, help_text='Validity end date', null=True, verbose_name='effective end')),
                ('operation', models.ForeignKey(help_text='Parent operation', on_delete=django.db.models.deletion.CASCADE, related_name='suboperations', to='input.Operation', verbose_name='operation')),
                ('suboperation', models.ForeignKey(help_text='Child operation', on_delete=django.db.models.deletion.CASCADE, related_name='superoperations', to='input.Operation', verbose_name='suboperation')),
            ],
            options={
                'verbose_name': 'suboperation',
                'verbose_name_plural': 'suboperations',
                'db_table': 'suboperation',
                'ordering': ['operation', 'priority', 'suboperation'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('lft', models.PositiveIntegerField(blank=True, db_index=True, editable=False, null=True)),
                ('rght', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('lvl', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('source', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='source')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='last modified')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='updated_at')),
                ('id', models.AutoField(help_text='Unique identifier', primary_key=True, serialize=False, verbose_name='id')),
                ('nr', models.CharField(db_index=True, max_length=300, unique=True, verbose_name='nr')),
                ('name', models.CharField(db_index=True, max_length=300, verbose_name='name')),
                ('area', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='area')),
                ('address', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='address')),
                ('ship_address', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='ship_address')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='description')),
                ('category', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='category')),
                ('subcategory', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='subcategory')),
                ('available', models.ForeignKey(blank=True, help_text='Calendar defining the working hours and holidays', null=True, on_delete=django.db.models.deletion.CASCADE, to='input.Calendar', verbose_name='available')),
                ('owner', models.ForeignKey(blank=True, help_text='Hierarchical parent', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='xchildren', to='input.Supplier', verbose_name='owner')),
            ],
            options={
                'verbose_name': 'supplier',
                'verbose_name_plural': 'suppliers',
                'db_table': 'supplier',
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='resourceskill',
            name='skill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='input.Skill', verbose_name='skill'),
        ),
        migrations.AddField(
            model_name='resource',
            name='setupmatrix',
            field=models.ForeignKey(blank=True, help_text='Setup matrix defining the conversion time and cost', null=True, on_delete=django.db.models.deletion.CASCADE, to='input.SetupMatrix', verbose_name='setup matrix'),
        ),
        migrations.AddField(
            model_name='operationresource',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operationresources', to='input.Resource', verbose_name='resource'),
        ),
        migrations.AddField(
            model_name='operationresource',
            name='skill',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='operationresources', to='input.Skill', verbose_name='skill'),
        ),
        migrations.AddField(
            model_name='operationplanresource',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operationplanresources', to='input.Resource', verbose_name='resource'),
        ),
        migrations.AddField(
            model_name='operationplan',
            name='supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='input.Supplier', verbose_name='supplier'),
        ),
        migrations.AddField(
            model_name='itemsupplier',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suppliers', to='input.Supplier', verbose_name='supplier'),
        ),
        migrations.AddField(
            model_name='itemdistribution',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='itemdistributions_destination', to='input.Location', verbose_name='location'),
        ),
        migrations.AddField(
            model_name='itemdistribution',
            name='origin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itemdistributions_origin', to='input.Location', verbose_name='origin'),
        ),
        migrations.AddField(
            model_name='itemdistribution',
            name='resource',
            field=models.ForeignKey(blank=True, help_text='Resource to model the distribution capacity', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='itemdistributions', to='input.Resource', verbose_name='resource'),
        ),
        migrations.AddField(
            model_name='demand',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='input.Item', verbose_name='item'),
        ),
        migrations.AddField(
            model_name='demand',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='input.Location', verbose_name='location'),
        ),
        migrations.AddField(
            model_name='demand',
            name='operation',
            field=models.ForeignKey(blank=True, help_text='Operation used to satisfy this demand', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='used_demand', to='input.Operation', verbose_name='delivery operation'),
        ),
        migrations.AddField(
            model_name='demand',
            name='owner',
            field=models.ForeignKey(blank=True, help_text='Hierarchical parent', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='xchildren', to='input.Demand', verbose_name='owner'),
        ),
        migrations.AddField(
            model_name='buffer',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='input.Item', verbose_name='item'),
        ),
        migrations.AddField(
            model_name='buffer',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='input.Location', verbose_name='location'),
        ),
        migrations.AddField(
            model_name='buffer',
            name='minimum_calendar',
            field=models.ForeignKey(blank=True, help_text='Calendar storing a time-dependent safety stock profile', null=True, on_delete=django.db.models.deletion.CASCADE, to='input.Calendar', verbose_name='minimum calendar'),
        ),
        migrations.CreateModel(
            name='DeliveryOrder',
            fields=[
            ],
            options={
                'verbose_name': 'delivery order',
                'verbose_name_plural': 'delivery orders',
                'proxy': True,
                'indexes': [],
            },
            bases=('input.operationplan',),
        ),
        migrations.CreateModel(
            name='DistributionOrder',
            fields=[
            ],
            options={
                'verbose_name': 'distribution order',
                'verbose_name_plural': 'distribution orders',
                'proxy': True,
                'indexes': [],
            },
            bases=('input.operationplan',),
        ),
        migrations.CreateModel(
            name='ManufacturingOrder',
            fields=[
            ],
            options={
                'verbose_name': 'manufacturing order',
                'verbose_name_plural': 'manufacturing orders',
                'proxy': True,
                'indexes': [],
            },
            bases=('input.operationplan',),
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
            ],
            options={
                'verbose_name': 'purchase order',
                'verbose_name_plural': 'purchase orders',
                'proxy': True,
                'indexes': [],
            },
            bases=('input.operationplan',),
        ),
        migrations.AlterUniqueTogether(
            name='suboperation',
            unique_together=set([('operation', 'suboperation', 'effective_start')]),
        ),
        migrations.AlterUniqueTogether(
            name='setuprule',
            unique_together=set([('setupmatrix', 'priority')]),
        ),
        migrations.AlterUniqueTogether(
            name='resourceskill',
            unique_together=set([('resource', 'skill')]),
        ),
        migrations.AlterUniqueTogether(
            name='operationresource',
            unique_together=set([('operation', 'resource', 'effective_start')]),
        ),
        migrations.AlterUniqueTogether(
            name='operationmaterial',
            unique_together=set([('operation', 'item', 'effective_start')]),
        ),
        migrations.AlterUniqueTogether(
            name='itemsupplier',
            unique_together=set([('item', 'supplier', 'effective_start')]),
        ),
        migrations.AlterUniqueTogether(
            name='itemdistribution',
            unique_together=set([('item', 'location', 'origin', 'effective_start')]),
        ),
        migrations.AlterUniqueTogether(
            name='calendarbucket',
            unique_together=set([('calendar', 'startdate', 'enddate', 'priority')]),
        ),
        migrations.AlterUniqueTogether(
            name='buffer',
            unique_together=set([('item', 'location')]),
        ),
    ]
